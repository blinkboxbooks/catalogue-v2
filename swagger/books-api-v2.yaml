swagger: "2.0"
produces:
  - application/vnd.blinkbox.books.v2+json
info:
  title: Catalogue V2 Books APIs
  version: "2.0"
paths:
  /books:
    get:
      description: |
        The main browse and search endpoint; supports a wealth of filters and returns full books data together with possible
        filters (i.e. facets) that can be used to drill down in the result set
      parameters:
        -
          name: q
          description: |
            Free-text user search - should support matching on titles, isbns, authors, genres, tags and description
            content with proper weighting to build an useful relevance model
          in: query
          type: string
        -
          name: genre
          description: Filter using BISAC-mapped genres
          in: query
          type: string
        -
          name: bisac
          description: Filter using a BISAC code
          in: query
          type: string
        -
          name: tag
          description: Filter using automatic tags (e.g. "Free")
          in: query
          type: string
        -
          name: minPublicationDate
          description: Filter by publication date
          in: query
          type: string
          format: date
        -
          name: maxPublicationDate
          description: Filter by publication date
          in: query
          type: string
          format: date
        -
          name: minPrice
          description: Filter by minimum price
          in: query
          type: number
        -
          name: maxPrice
          description: Filter by maximum price
          in: query
          type: number
        -
          name: publisher
          description: Filter by publisher id
          in: query
          type: string
        -
          name: availableAs
          description: This will be implemented only when we will integrate with Waterstones physical bookshop
          in: query
          type: string
          format: onixProductForm
        -
          name: offset
          in: query
          type: integer
          minimum: 0
          description: Pagination - first result to return
        -
          name: count
          in: query
          type: integer
          minimum: 1
          description: Pagination - how many results should be returned
        -
          name: sortBy
          in: query
          type: string
          enum:
            - Relevance
            - Popularity
            - Price
            - Title
            - Author
            - PublicationDate
          default: Relevance
          description: Sort criteria
        -
          name: sortOrder
          in: query
          type: string
          enum:
            - Asc
            - Desc
          default: Desc
          description: Sort order
        -
          name: format
          description: |
            Decides how many fields to return for each entity; Minimal will include only ids/link, Standard (default) most fields
            except description and long texts and Full will include all available metadata.
          in: query
          type: string
          enum:
            - Minimal
            - Standard
            - Full
      responses:
        200:
          $ref: "#/definitions/BookList"
  /suggestions:
    get:
      description: |
        The endpoint to be used to fetch suggestions based on a partial query; this is meant to enable
        auto-complete like behaviour on client interfaces. Results will be returned grouped by result
        type (i.e. book and author)
      parameters:
        -
          name: q
          in: query
          type: string
          description: Free-text user input to be used to find suggestions
        -
          name: count
          in: query
          type: integer
          minimum: 1
          description: Maximum amount of results-per-type to be returned
        -
          name: type
          in: query
          type: string
          enum:
            - Book
            - Author
          description: Limit suggestions to a specific type
      responses:
        200:
          $ref: "#/definitions/SuggestionsResponse"
  /books/{isbn}:
    get:
      description: Get a single book's metadata by ISBN
      parameters:
        -
          name: isbn
          type: string
          in: path
      responses:
        200:
          $ref: "#/definitions/Book"
        404:
          description: Returned if the required book does not exist or if the ISBN isn't a 13 digits number
  /books/_bulk:
    get:
      description: |
        Get a list of books by providing a list of ISBNs; for each ISBN provided in the request there will
        be an object in the response that will be either a book's metadata or a representation of an error
      parameters:
        -
          name: isbn
          type: array
          collectionFormat: multi
          items:
            type: string
          in: query
      responses:
        200:
          $ref: "#/definitions/BookBulk"
definitions:
  BookBulk:
    type: object
    properties:
      notFound:
        description: A list of ISBNs that have not been found in the index
        type: array
        items:
          type: string
      items:
        type: array
        items:
          $ref: "#/definitions/Book"
  SuggestionsResponse:
    type: object
    properties:
      books:
        type: array
        items:
          $ref: "#/definitions/BookSuggestion"
      authors:
        type: array
        items:
          $ref: "#/definitions/AuthorSuggestion"
  BookSuggestion:
    type: object
    properties:
      isbn:
        type: string
      title:
        type: string
      author:
        type: string
      image:
        description: A cover image for the book; should be a small image, suitable for previews and very light on the wire
        type: string
        format: uri
      link:
        type: string
        format: uri
    required:
      - isbn
      - title
      - link
  AuthorSuggestion:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      image:
        description: A picture of the author; should be a small image, suitable for previews and very light on the wire
        type: string
        format: uri
      link:
        type: string
        format: uri
    required:
      - id
      - name
      - link
  BookList:
    title: Response for a book search
    type: object
    properties:
      pagination:
        $ref: "#/definitions/PaginationInfo"
      items:
        type: array
        items:
          $ref: "#/definitions/Book"
      facets:
        type: array
        items:
          $ref: "#/definitions/Facet"
  Facet:
    type: object
    properties:
      title:
        type: string
      filters:
        type: array
        items:
          $ref: "#/definitions/FacetFilter"
  FacetFilter:
    type: object
    properties:
      title:
        type: string
      count:
        type: integer
      link:
        type: string
        format: uri
  PaginationInfo:
    type: object
    properties:
      total:
        type: integer
      links:
        $ref: "#/definitions/PaginationLinks"
  PaginationLinks:
    type: object
    properties:
      previous:
        type: string
        format: uri
      next:
        type: string
        format: uri
      first:
        type: string
        format: uri
      last:
        type: string
        format: uri
  Contributor:
    type: object
    description: A contributor's data
    properties:
      role:
        type: string
        format: onixContributorRole
      id:
        type: string
      displayName:
        type: string
      sortName:
        type: string
    required:
      - role
      - id
      - displayName
      - sortName
  TextList:
    type: array
    items:
      type: object
      properties:
        content:
          type: string
        type:
          type: string
        author:
          type: string
      required:
        - content
        - type
  Regions:
    type: object
    properties:
      GB:
        type: boolean
  Price:
    type: object
    properties:
      amount:
        type: number
      currency:
        type: string
      discountRate:
        type: integer
      validFrom:
        type: string
        format: datetime
      validUntil:
        type: string
        format: datetime
      applicableRegions:
        $ref: "#/definitions/Regions"
      tax:
        type: object
        properties:
          rate:
            type: string
          percent:
            type: number
          amount:
            type: number
          taxableAmount:
            type: number
    required:
      - amount
      - currency
  PriceList:
    type: array
    items:
      $ref: "#/definitions/Price"
  Statistics:
    type: object
    properties:
      pages:
        type: integer
      sentences:
        type: integer
      words:
        type: integer
      syllabes:
        type: integer
      polysyllabes:
        type: integer
      smogGrade:
        type: integer
      adultThemes:
        type: object
        properties:
          rating:
            type: number
          reviewers:
            type: integer
  SubjectList:
    type: array
    items:
      type: object
      properties:
        type:
          type: string
        code:
          type: string
        main:
          type: boolean
      required:
        - type
        - code
  RelatedList:
    type: array
    items:
      type: object
      properties:
        relation:
          type: string
        isbn:
          type: string
  Epub:
    type: object
    properties:
      uris:
        type: array
        items:
          type: string
          format: uri
      wordCount:
        type: integer
      size:
        type: integer
    required:
      - uris
      - wordCount
      - size
  Image:
    type: object
    properties:
      uris:
        type: array
        items:
          type: string
          format: uri
      width:
        type: integer
      heigt:
        type: integer
      size:
        type: integer
    required:
      - uris
      - size
  Media:
    type: object
    properties:
      epubs:
        description: A list of Epubs URIs; in this APIs there will only be samples in here
        type: array
        items:
          $ref: "#/definitions/Epub"
      images:
        type: array
        items:
          $ref: "#/definitions/Image"
  Book:
    type: object
    description: Representation of a book's metadata
    properties:
      isbn:
        type: string
      format:
        marvinIncompatible:
          type: boolean
        epubType:
          type: string
        productForm:
          type: string
      title:
        type: string
      subtitle:
        type: string
      description:
        type: string
      contributors:
        $ref: "#/definitions/Contributor"
      dates:
        type: object
        properties:
          publish:
            type: string
            format: date
          announce:
            type: string
            format: date
      descriptions:
        $ref: "#/definitions/TextList"
      reviews:
        $ref: "#/definitions/TextList"
      languages:
        type: array
        items:
          type: string
          format: language
      originalLanguages:
        type: array
        items:
          type: string
          format: language
      supplyRights:
        $ref: "#/definitions/Regions"
      salesRights:
        $ref: "#/definitions/Regions"
      publisher:
        type: string
      imprint:
        type: string
      prices:
        $ref: "#/definitions/PriceList"
      statistics:
        $ref: "#/definitions/Statistics"
      subjects:
        $ref: "#/definitions/SubjectList"
      related:
        $ref: "#/definitions/RelatedList"
      media:
        $ref: "#/definitions/Media"
    required:
      - isbn
      - title
